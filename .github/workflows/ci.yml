name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6]

    steps:
    - uses: actions/checkout@v2

    - name: Setup Variables
      id: vars
      run: |
        REPORTS_DIR=test-reports-${{ matrix.python-version }}
        echo ::set-output name=reports_dir::${REPORTS_DIR}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v2
      id: pip-cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
  
    - name: pip install
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements.dev.txt
  
    - name: Test
      run: python -m pytest \
        --junitxml=${{ steps.vars.outputs.reports_dir }}/junit.xml \
        --cov \
        --cov-report=xml:${{ steps.vars.outputs.reports_dir }}/coverage.xml \
        --cov-report=html:${{ steps.vars.outputs.reports_dir }}/coverage.html
  
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v2
      with:
        report_paths: ${{ steps.vars.outputs.reports_dir }}/junit.xml
        check_name: Model API Test Report
        fail_on_failure: true
